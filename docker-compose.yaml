version: '2.1'

services:
  app-php:
    user: 1000:1000
    container_name: app-php
    build: ./docker/php/
    env_file:
      - ${PWD:-./}/.env
    # ports:
    #   - '8080:80'
    volumes:
      - ${PWD:-./}:/var/
    environment:
      COMPOSER_HOME: /var/www/var/composer
      XDEBUG_CONFIG: client_host=${DOCKER_GATEWAY_HOST:-host.docker.internal}
      PHP_IDE_CONFIG: serverName=app
    depends_on:
      app-postgres:
        condition: service_healthy

  app-postgres:
    container_name: app-postgres
    image: postgres:11.2-alpine
    volumes:
      - app-postgres-data:/var/lib/postgresql/data
      - ${PWD:-./}/pgdumps:/var/www
    ports:
      - '5433:5432'
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: pg_isready -U root -d app -p 5432
      interval: 5s
      timeout: 5s
      retries: 10

  app-nginx:
    container_name: app-nginx
    image: nginx:latest
    volumes:
      - ${PWD:-./}/backend:/var/www
      - ./docker/nginx/config/project.conf:/etc/nginx/conf.d/project.conf
      - ./docker/nginx/logs:/var/log/nginx
    ports:
      - '8081:80'
      - '4434:443'
    depends_on:
      - app-php

  app-frontend:
    image: node:16.16-alpine
    user: 1000:1000
    command: sh -c "yarn install && yarn run dev"
    working_dir: /app/
    volumes:
      - ${PWD:-./}/frontend:/app
      - ${PWD:-./}/.env:/app/.env
    ports:
      - "80:3000"

volumes:
  app-postgres-data:
